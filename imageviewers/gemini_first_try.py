#
# this was the version generated by Gemini before selecting the menu
# option "More Professional", which really just added comments and
# a try..except block down below line 61. Oh and both versions were
# missing the 'os' import.

import sys
import os
from PyQt6.QtCore import Qt, QSize
from PyQt6.QtGui import QImage, QPixmap, QIcon
from PyQt6.QtWidgets import (
    QApplication,
    QLabel,
    QGridLayout,
    QWidget,
    QPushButton,
    QFileDialog,
    QDialog,
    QVBoxLayout,
    QScrollArea,
)

class ImageViewerDialog(QDialog):
    def __init__(self, image_path):
        super().__init__()

        self.setWindowTitle("Image Viewer")

        self.image_label = QLabel()
        pixmap = QPixmap(image_path)
        self.image_label.setPixmap(pixmap)

        scroll_area = QScrollArea()
        scroll_area.setWidget(self.image_label)
        scroll_area.setWidgetResizable(True)

        layout = QVBoxLayout()
        layout.addWidget(scroll_area)
        self.setLayout(layout)

class ThumbnailViewer(QWidget):
    def __init__(self):
        super().__init__()

        self.layout = QGridLayout()
        self.setLayout(self.layout)

        self.button = QPushButton("Select Directory")
        self.button.clicked.connect(self.select_directory)
        self.layout.addWidget(self.button, 0, 0, 1, 2)

    def select_directory(self):
        directory = QFileDialog.getExistingDirectory(self, "Select Directory")
        if directory:
            self.load_thumbnails(directory)

    def load_thumbnails(self, directory):
        self.clear_layout()

        image_files = [f for f in os.listdir(directory) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]

        for i, filename in enumerate(image_files):
            filepath = os.path.join(directory, filename)
            pixmap = QPixmap(filepath)
            pixmap = pixmap.scaled(QSize(100, 100), Qt.AspectRatioMode.KeepAspectRatio)

            thumbnail = QLabel()
            thumbnail.setPixmap(pixmap)
            thumbnail.setToolTip(filename)

            # Connect double-click signal to open image in dialog
            thumbnail.mouseDoubleClickEvent = lambda event, filepath=filepath: self.show_image_in_dialog(filepath)

            row = i // 5
            col = i % 5
            self.layout.addWidget(thumbnail, row + 1, col)

    def show_image_in_dialog(self, image_path):
        dialog = ImageViewerDialog(image_path)
        dialog.exec_()

    def clear_layout(self):
        while self.layout.count() > 1:
            item = self.layout.itemAt(1)
            if item:
                item.widget().deleteLater()
                self.layout.removeItem(item)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    viewer = ThumbnailViewer()
    viewer.show()
    sys.exit(app.exec())
